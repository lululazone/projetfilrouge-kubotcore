name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write  # ✅ Donne les permissions nécessaires pour créer une release

jobs:
  build:
    name: Build and Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ✅ Nécessaire pour récupérer tous les tags Git

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package

      - name: Get project version
        id: get_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Delete existing tag if it exists
        run: |
          if git rev-parse v${{ env.VERSION }} >/dev/null 2>&1; then
            git tag -d v${{ env.VERSION }}
            git push --delete origin v${{ env.VERSION }}
          fi

      - name: Create new Git tag
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JAR to Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
