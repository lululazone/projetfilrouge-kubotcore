name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write  # Permissions nécessaires pour créer une release

jobs:
  build:
    name: Build and Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Nécessaire pour récupérer tous les tags Git

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package

      - name: Get project version
        id: get_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Display version
        run: echo "Project version is ${{ env.VERSION }}"

      - name: List target directory
        run: ls -la target

      - name: Verify JAR file exists
        id: verify_jar
        run: |
          JAR_FILE=$(ls target/*.jar | head -n 1)
          if [ -z "$JAR_FILE" ]; then
            echo "No JAR file found in target directory"
            exit 1
          fi
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_FILE }}
          asset_name: my-app-${{ env.VERSION }}.jar
          asset_content_type: application/java-archive
